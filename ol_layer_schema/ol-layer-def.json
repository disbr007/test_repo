{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AoBaseClickConfig": {
      "additionalProperties": false,
      "properties": {
        "allowAllZooms": {
          "title": "allowAllZooms",
          "type": "boolean"
        },
        "data": {
          "title": "data"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "factory": {
          "title": "factory",
          "type": "string"
        },
        "format": {
          "title": "format",
          "type": "string"
        },
        "hitTolerance": {
          "title": "hitTolerance",
          "type": "number"
        },
        "mergeOnField": {
          "title": "mergeOnField",
          "type": "string"
        },
        "responseName": {
          "title": "responseName",
          "type": "string"
        },
        "url": {
          "title": "url",
          "type": "string"
        },
        "urlEnd": {
          "title": "urlEnd",
          "type": "string"
        },
        "urlStart": {
          "title": "urlStart",
          "type": "string"
        },
        "zoomLevel": {
          "title": "zoomLevel",
          "type": "number"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "AoClickConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/AoClickLocalConfig"
        },
        {
          "$ref": "#/definitions/AoClickRemoteConfig"
        },
        {
          "$ref": "#/definitions/AoClickRemoteWMSConfig"
        },
        {
          "$ref": "#/definitions/AoClickRemoteMapServerConfig"
        }
      ]
    },
    "AoClickLocalConfig": {
      "additionalProperties": false,
      "properties": {
        "allowAllZooms": {
          "title": "allowAllZooms",
          "type": "boolean"
        },
        "data": {
          "title": "data"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "factory": {
          "title": "factory",
          "type": "string"
        },
        "format": {
          "title": "format",
          "type": "string"
        },
        "hitTolerance": {
          "title": "hitTolerance",
          "type": "number"
        },
        "mergeOnField": {
          "title": "mergeOnField",
          "type": "string"
        },
        "responseName": {
          "title": "responseName",
          "type": "string"
        },
        "type": {
          "enum": [
            "click:local"
          ],
          "title": "type",
          "type": "string"
        },
        "url": {
          "title": "url",
          "type": "string"
        },
        "urlEnd": {
          "title": "urlEnd",
          "type": "string"
        },
        "urlStart": {
          "title": "urlStart",
          "type": "string"
        },
        "zoomLevel": {
          "title": "zoomLevel",
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "AoClickLocalConfig",
      "type": "object"
    },
    "AoClickRemoteConfig": {
      "additionalProperties": false,
      "properties": {
        "allowAllZooms": {
          "title": "allowAllZooms",
          "type": "boolean"
        },
        "data": {
          "title": "data"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "factory": {
          "title": "factory",
          "type": "string"
        },
        "format": {
          "title": "format",
          "type": "string"
        },
        "hitTolerance": {
          "title": "hitTolerance",
          "type": "number"
        },
        "mergeOnField": {
          "title": "mergeOnField",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "queryStringParams": {
          "$ref": "#/definitions/Record<string,string|number>",
          "title": "queryStringParams"
        },
        "responseName": {
          "title": "responseName",
          "type": "string"
        },
        "type": {
          "enum": [
            "click:remote"
          ],
          "title": "type",
          "type": "string"
        },
        "url": {
          "title": "url",
          "type": "string"
        },
        "urlEnd": {
          "title": "urlEnd",
          "type": "string"
        },
        "urlStart": {
          "title": "urlStart",
          "type": "string"
        },
        "zoomLevel": {
          "title": "zoomLevel",
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "AoClickRemoteConfig",
      "type": "object"
    },
    "AoClickRemoteMapServerConfig": {
      "additionalProperties": false,
      "properties": {
        "allowAllZooms": {
          "title": "allowAllZooms",
          "type": "boolean"
        },
        "data": {
          "title": "data"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "factory": {
          "title": "factory",
          "type": "string"
        },
        "format": {
          "title": "format",
          "type": "string"
        },
        "hitTolerance": {
          "title": "hitTolerance",
          "type": "number"
        },
        "mergeOnField": {
          "title": "mergeOnField",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "queryStringParams": {
          "$ref": "#/definitions/Record<string,string|number>",
          "title": "queryStringParams"
        },
        "responseName": {
          "title": "responseName",
          "type": "string"
        },
        "type": {
          "enum": [
            "click:remote:mapserver"
          ],
          "title": "type",
          "type": "string"
        },
        "url": {
          "title": "url",
          "type": "string"
        },
        "urlEnd": {
          "title": "urlEnd",
          "type": "string"
        },
        "urlStart": {
          "title": "urlStart",
          "type": "string"
        },
        "zoomLevel": {
          "title": "zoomLevel",
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "AoClickRemoteMapServerConfig",
      "type": "object"
    },
    "AoClickRemoteWMSConfig": {
      "additionalProperties": false,
      "properties": {
        "allowAllZooms": {
          "title": "allowAllZooms",
          "type": "boolean"
        },
        "data": {
          "title": "data"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "factory": {
          "title": "factory",
          "type": "string"
        },
        "format": {
          "title": "format",
          "type": "string"
        },
        "hitTolerance": {
          "title": "hitTolerance",
          "type": "number"
        },
        "mergeOnField": {
          "title": "mergeOnField",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "queryStringParams": {
          "$ref": "#/definitions/Record<string,string|number>",
          "title": "queryStringParams"
        },
        "responseName": {
          "title": "responseName",
          "type": "string"
        },
        "type": {
          "enum": [
            "click:remote:wms"
          ],
          "title": "type",
          "type": "string"
        },
        "url": {
          "title": "url",
          "type": "string"
        },
        "urlEnd": {
          "title": "urlEnd",
          "type": "string"
        },
        "urlStart": {
          "title": "urlStart",
          "type": "string"
        },
        "zoomLevel": {
          "title": "zoomLevel",
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "AoClickRemoteWMSConfig",
      "type": "object"
    },
    "AoColumnConfig": {
      "additionalProperties": false,
      "properties": {
        "geometry": {
          "title": "geometry",
          "type": "string"
        },
        "ignore": {
          "items": {
            "type": "string"
          },
          "title": "ignore",
          "type": "array"
        },
        "link": {
          "items": {
            "type": "string"
          },
          "title": "link",
          "type": "array"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "showProperty": {
          "title": "showProperty",
          "type": "string"
        },
        "summary": {
          "items": {
            "$ref": "#/definitions/ColumnRef"
          },
          "title": "summary",
          "type": "array"
        },
        "table": {
          "title": "table",
          "type": "string"
        }
      },
      "title": "AoColumnConfig",
      "type": "object"
    },
    "AoCreateConfig": {
      "additionalProperties": false,
      "properties": {
        "defaultObj": {
          "title": "defaultObj"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "includeSource": {
          "title": "includeSource",
          "type": "boolean"
        },
        "limit": {
          "title": "limit",
          "type": "number"
        },
        "mapping": {
          "$ref": "#/definitions/AoCreateMappingConfig",
          "title": "mapping"
        },
        "parser": {
          "enum": [
            "aoAsset",
            "parcel"
          ],
          "title": "parser",
          "type": "string"
        }
      },
      "required": [
        "defaultObj",
        "enabled",
        "mapping",
        "parser"
      ],
      "title": "AoCreateConfig",
      "type": "object"
    },
    "AoCreateMappingConfig": {
      "additionalProperties": {
        "anyOf": [
          {
            "additionalProperties": false,
            "properties": {
              "aoPath": {
                "title": "aoPath",
                "type": "string"
              },
              "fromPath": {
                "title": "fromPath",
                "type": "string"
              }
            },
            "required": [
              "aoPath",
              "fromPath"
            ],
            "type": "object"
          },
          {
            "type": "string"
          }
        ]
      },
      "title": "AoCreateMappingConfig",
      "type": "object"
    },
    "AoDrawingConfig": {
      "additionalProperties": false,
      "properties": {
        "olClass": {
          "enum": [
            "AoDrawing"
          ],
          "title": "olClass",
          "type": "string"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "AoDrawingConfig",
      "type": "object"
    },
    "AoDrawingOptions": {
      "properties": {},
      "type": "object"
    },
    "AoFormatConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/EsriJSONConfig"
        },
        {
          "$ref": "#/definitions/GeoJSONConfig"
        },
        {
          "$ref": "#/definitions/MVTConfig"
        },
        {
          "$ref": "#/definitions/AoMVTConfig"
        },
        {
          "$ref": "#/definitions/AoDrawingConfig"
        },
        {
          "$ref": "#/definitions/KMZConfig"
        }
      ]
    },
    "AoImageSourceConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/ImageWMSConfig"
        },
        {
          "$ref": "#/definitions/ImageArcGISRestConfig"
        }
      ]
    },
    "AoInitConfig": {
      "additionalProperties": false,
      "properties": {
        "center": {
          "items": {
            "type": "number"
          },
          "title": "center",
          "type": "array"
        },
        "minZoom": {
          "title": "minZoom",
          "type": "number"
        },
        "panTo": {
          "title": "panTo",
          "type": "boolean"
        }
      },
      "title": "AoInitConfig",
      "type": "object"
    },
    "AoLayerConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/VectorLayerConfig"
        },
        {
          "$ref": "#/definitions/ImageLayerConfig"
        },
        {
          "$ref": "#/definitions/VectorTileLayerConfig"
        },
        {
          "$ref": "#/definitions/TileLayerConfig"
        }
      ]
    },
    "AoLayerGroupConfig": {
      "additionalProperties": false,
      "properties": {
        "accessKey": {
          "title": "accessKey",
          "type": "string"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "layer": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/VectorLayerConfig"
              },
              {
                "$ref": "#/definitions/ImageLayerConfig"
              },
              {
                "$ref": "#/definitions/VectorTileLayerConfig"
              },
              {
                "$ref": "#/definitions/TileLayerConfig"
              }
            ]
          },
          "title": "layer",
          "type": "array"
        },
        "meta": {
          "additionalProperties": false,
          "properties": {
            "aoDevNotes": {
              "title": "aoDevNotes",
              "type": "string"
            },
            "archived": {
              "title": "archived",
              "type": "boolean"
            },
            "health": {
              "additionalProperties": false,
              "properties": {
                "lastCheckTime": {
                  "title": "lastCheckTime",
                  "type": "number"
                },
                "message": {
                  "title": "message",
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "ERROR",
                    "MAINTENANCE",
                    "OK"
                  ],
                  "title": "status",
                  "type": "string"
                }
              },
              "required": [
                "lastCheckTime",
                "message",
                "status"
              ],
              "title": "health",
              "type": "object"
            },
            "hostedBy": {
              "enum": [
                "ao"
              ],
              "title": "hostedBy",
              "type": "string"
            },
            "keywords": {
              "title": "keywords",
              "type": "string"
            },
            "layerMetaData": {
              "additionalProperties": false,
              "properties": {
                "comments": {
                  "title": "comments",
                  "type": "string"
                },
                "dataCategory": {
                  "enum": [
                    "Engineering",
                    "Other",
                    "Permitting",
                    "Real Estate"
                  ],
                  "title": "dataCategory",
                  "type": "string"
                },
                "dateOfStudy": {
                  "title": "dateOfStudy",
                  "type": "number"
                },
                "generationCapacity": {
                  "title": "generationCapacity",
                  "type": "number"
                }
              },
              "required": [
                "comments",
                "dateOfStudy",
                "generationCapacity"
              ],
              "title": "layerMetaData",
              "type": "object"
            },
            "layerSortPriority": {
              "title": "layerSortPriority",
              "type": "string"
            },
            "managedBy": {
              "enum": [
                "ao",
                "user"
              ],
              "title": "managedBy",
              "type": "string"
            },
            "pageId": {
              "title": "pageId",
              "type": "string"
            },
            "sectionGroupName": {
              "title": "sectionGroupName",
              "type": "string"
            },
            "sectionGroupPriority": {
              "title": "sectionGroupPriority",
              "type": "string"
            },
            "sectionName": {
              "title": "sectionName",
              "type": "string"
            },
            "sectionPriority": {
              "title": "sectionPriority",
              "type": "string"
            },
            "sourceName": {
              "title": "sourceName",
              "type": "string"
            },
            "sourceUrl": {
              "title": "sourceUrl",
              "type": "string"
            }
          },
          "required": [
            "archived",
            "managedBy"
          ],
          "title": "meta",
          "type": "object"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "type": {
          "enum": [
            "layer-group"
          ],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "accessKey",
        "layer",
        "meta",
        "name",
        "type"
      ],
      "type": "object"
    },
    "AoLayerGroupMeta": {
      "additionalProperties": false,
      "properties": {
        "aoDevNotes": {
          "title": "aoDevNotes",
          "type": "string"
        },
        "archived": {
          "title": "archived",
          "type": "boolean"
        },
        "health": {
          "additionalProperties": false,
          "properties": {
            "lastCheckTime": {
              "title": "lastCheckTime",
              "type": "number"
            },
            "message": {
              "title": "message",
              "type": "string"
            },
            "status": {
              "enum": [
                "ERROR",
                "MAINTENANCE",
                "OK"
              ],
              "title": "status",
              "type": "string"
            }
          },
          "required": [
            "lastCheckTime",
            "message",
            "status"
          ],
          "title": "health",
          "type": "object"
        },
        "hostedBy": {
          "enum": [
            "ao"
          ],
          "title": "hostedBy",
          "type": "string"
        },
        "keywords": {
          "title": "keywords",
          "type": "string"
        },
        "layerMetaData": {
          "additionalProperties": false,
          "properties": {
            "comments": {
              "title": "comments",
              "type": "string"
            },
            "dataCategory": {
              "enum": [
                "Engineering",
                "Other",
                "Permitting",
                "Real Estate"
              ],
              "title": "dataCategory",
              "type": "string"
            },
            "dateOfStudy": {
              "title": "dateOfStudy",
              "type": "number"
            },
            "generationCapacity": {
              "title": "generationCapacity",
              "type": "number"
            }
          },
          "required": [
            "comments",
            "dateOfStudy",
            "generationCapacity"
          ],
          "title": "layerMetaData",
          "type": "object"
        },
        "layerSortPriority": {
          "title": "layerSortPriority",
          "type": "string"
        },
        "managedBy": {
          "enum": [
            "ao",
            "user"
          ],
          "title": "managedBy",
          "type": "string"
        },
        "pageId": {
          "title": "pageId",
          "type": "string"
        },
        "sectionGroupName": {
          "title": "sectionGroupName",
          "type": "string"
        },
        "sectionGroupPriority": {
          "title": "sectionGroupPriority",
          "type": "string"
        },
        "sectionName": {
          "title": "sectionName",
          "type": "string"
        },
        "sectionPriority": {
          "title": "sectionPriority",
          "type": "string"
        },
        "sourceName": {
          "title": "sourceName",
          "type": "string"
        },
        "sourceUrl": {
          "title": "sourceUrl",
          "type": "string"
        }
      },
      "required": [
        "archived",
        "managedBy"
      ],
      "type": "object"
    },
    "AoLayerOptionAllConfig": {
      "additionalProperties": false,
      "properties": {
        "aoClick": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoClickLocalConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteWMSConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteMapServerConfig"
            }
          ],
          "title": "aoClick"
        },
        "aoColumns": {
          "$ref": "#/definitions/AoColumnConfig",
          "title": "aoColumns"
        },
        "aoCreate": {
          "$ref": "#/definitions/AoCreateConfig",
          "title": "aoCreate"
        },
        "aoInit": {
          "$ref": "#/definitions/AoInitConfig",
          "title": "aoInit"
        },
        "aoLegend": {
          "$ref": "#/definitions/AoLegendConfig",
          "title": "aoLegend"
        },
        "aoLoader": {
          "$ref": "#/definitions/AoLoaderConfig",
          "title": "aoLoader"
        },
        "aoPolygonSelect": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoPolygonSelectLocalConfig"
            },
            {
              "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
            }
          ],
          "title": "aoPolygonSelect"
        },
        "aoStyle": {
          "$ref": "#/definitions/AoStyleConfig",
          "title": "aoStyle"
        }
      },
      "type": "object"
    },
    "AoLayerOptionBaseConfig": {
      "additionalProperties": false,
      "properties": {
        "aoClick": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoClickLocalConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteWMSConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteMapServerConfig"
            }
          ],
          "title": "aoClick"
        },
        "aoColumns": {
          "$ref": "#/definitions/AoColumnConfig",
          "title": "aoColumns"
        },
        "aoCreate": {
          "$ref": "#/definitions/AoCreateConfig",
          "title": "aoCreate"
        },
        "aoInit": {
          "$ref": "#/definitions/AoInitConfig",
          "title": "aoInit"
        },
        "aoLegend": {
          "$ref": "#/definitions/AoLegendConfig",
          "title": "aoLegend"
        },
        "aoLoader": {
          "$ref": "#/definitions/AoLoaderConfig",
          "title": "aoLoader"
        },
        "aoPolygonSelect": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoPolygonSelectLocalConfig"
            },
            {
              "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
            }
          ],
          "title": "aoPolygonSelect"
        }
      },
      "type": "object"
    },
    "AoLegendConfig": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "title": "data"
        },
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "url": {
          "title": "url",
          "type": "string"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "AoLegendConfig",
      "type": "object"
    },
    "AoLoaderConfig": {
      "additionalProperties": false,
      "properties": {
        "credentials": {
          "title": "credentials",
          "type": "boolean"
        },
        "unzip": {
          "title": "unzip",
          "type": "boolean"
        },
        "urlInterpolation": {
          "title": "urlInterpolation",
          "type": "boolean"
        }
      },
      "required": [
        "credentials",
        "unzip",
        "urlInterpolation"
      ],
      "title": "AoLoaderConfig",
      "type": "object"
    },
    "AoMVTConfig": {
      "additionalProperties": false,
      "properties": {
        "geometryName": {
          "description": "Geometry name to use when creating features.",
          "title": "geometryName",
          "type": "string"
        },
        "idProperty": {
          "description": "Optional property that will be assigned as the feature id and removed from the properties.\nlayers.",
          "title": "idProperty",
          "type": "string"
        },
        "layerName": {
          "description": "Name of the feature attribute that holds the layer name.",
          "title": "layerName",
          "type": "string"
        },
        "layers": {
          "description": "Layers to read features from. If not provided, features will be read from all",
          "items": {
            "type": "string"
          },
          "title": "layers",
          "type": "array"
        },
        "olClass": {
          "enum": [
            "AoMVT"
          ],
          "title": "olClass",
          "type": "string"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "AoMVTConfig",
      "type": "object"
    },
    "AoNetworkBaseConfig": {
      "additionalProperties": false,
      "properties": {
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "queryStringParams": {
          "$ref": "#/definitions/Record<string,string|number>",
          "title": "queryStringParams"
        },
        "url": {
          "title": "url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AoPolygonSelectConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/AoPolygonSelectLocalConfig"
        },
        {
          "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
        }
      ]
    },
    "AoPolygonSelectLocalConfig": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "type": {
          "enum": [
            "polygon-select:local"
          ],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "AoPolygonSelectLocalConfig",
      "type": "object"
    },
    "AoPolygonSelectRemoteConfig": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "queryStringParams": {
          "$ref": "#/definitions/Record<string,string|number>",
          "title": "queryStringParams"
        },
        "type": {
          "enum": [
            "polygon-select:remote"
          ],
          "title": "type",
          "type": "string"
        },
        "url": {
          "title": "url",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "AoPolygonSelectRemoteConfig",
      "type": "object"
    },
    "AoSourceConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/VectorSourceConfig"
        },
        {
          "$ref": "#/definitions/ImageWMSConfig"
        },
        {
          "$ref": "#/definitions/VectorTileSourceConfig"
        },
        {
          "$ref": "#/definitions/ImageArcGISRestConfig"
        },
        {
          "$ref": "#/definitions/TileArcGISRestConfig"
        },
        {
          "$ref": "#/definitions/TileWMSConfig"
        },
        {
          "$ref": "#/definitions/XYZConfig"
        },
        {
          "$ref": "#/definitions/WMTSConfig"
        }
      ]
    },
    "AoStyleConfig": {
      "additionalProperties": false,
      "properties": {
        "predefined": {
          "title": "predefined",
          "type": "string"
        },
        "renderer": {
          "enum": [
            "BaaRenderer",
            "TeamRenderer"
          ],
          "title": "renderer",
          "type": "string"
        },
        "static": {
          "title": "static"
        }
      },
      "title": "AoStyleConfig",
      "type": "object"
    },
    "AoTileLayerSourceConfig": {
      "anyOf": [
        {
          "$ref": "#/definitions/TileArcGISRestConfig"
        },
        {
          "$ref": "#/definitions/TileWMSConfig"
        },
        {
          "$ref": "#/definitions/XYZConfig"
        },
        {
          "$ref": "#/definitions/WMTSConfig"
        }
      ]
    },
    "BuildOptions": {
      "properties": {},
      "type": "object"
    },
    "ColumnRef": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "title": "key",
          "type": "string"
        },
        "name": {
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "ColumnRef",
      "type": "object"
    },
    "CustomMappingRecord": {
      "additionalProperties": false,
      "properties": {
        "aoPath": {
          "title": "aoPath",
          "type": "string"
        },
        "fromPath": {
          "title": "fromPath",
          "type": "string"
        }
      },
      "required": [
        "aoPath",
        "fromPath"
      ],
      "type": "object"
    },
    "DrawingElement": {
      "additionalProperties": {},
      "properties": {
        "style": {
          "additionalProperties": false,
          "properties": {
            "fillColor": {
              "title": "fillColor",
              "type": "string"
            },
            "fillOpacity": {
              "title": "fillOpacity",
              "type": "string"
            },
            "strokeColor": {
              "title": "strokeColor",
              "type": "string"
            },
            "strokeOpacity": {
              "title": "strokeOpacity",
              "type": "string"
            },
            "strokeWeight": {
              "title": "strokeWeight",
              "type": "string"
            },
            "zIndex": {
              "title": "zIndex",
              "type": "number"
            }
          },
          "title": "style",
          "type": "object"
        },
        "wkt": {
          "title": "wkt",
          "type": "string"
        }
      },
      "required": [
        "wkt"
      ],
      "type": "object"
    },
    "EsriJSONConfig": {
      "additionalProperties": false,
      "properties": {
        "geometryName": {
          "description": "Geometry name to use when creating features.",
          "title": "geometryName",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "EsriJSON"
          ],
          "title": "olClass",
          "type": "string"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "EsriJSONConfig",
      "type": "object"
    },
    "GeoJSONConfig": {
      "additionalProperties": false,
      "properties": {
        "dataProjection": {
          "description": "Default data projection.",
          "title": "dataProjection",
          "type": "string"
        },
        "extractGeometryName": {
          "description": "Certain GeoJSON providers include\nthe geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\nwill look for that field to set the geometry name. If both this field is set to `true`\nand a `geometryName` is provided, the `geometryName` will take precedence.",
          "title": "extractGeometryName",
          "type": "boolean"
        },
        "featureProjection": {
          "description": "Projection for features read or\nwritten by the format.  Options passed to read or write methods will take precedence.",
          "title": "featureProjection",
          "type": "string"
        },
        "geometryName": {
          "description": "Geometry name to use when creating features.",
          "title": "geometryName",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "GeoJSON"
          ],
          "title": "olClass",
          "type": "string"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "GeoJSONConfig",
      "type": "object"
    },
    "GoogleStyle": {
      "additionalProperties": false,
      "properties": {
        "fillColor": {
          "title": "fillColor",
          "type": "string"
        },
        "fillOpacity": {
          "title": "fillOpacity",
          "type": "string"
        },
        "strokeColor": {
          "title": "strokeColor",
          "type": "string"
        },
        "strokeOpacity": {
          "title": "strokeOpacity",
          "type": "string"
        },
        "strokeWeight": {
          "title": "strokeWeight",
          "type": "string"
        },
        "zIndex": {
          "title": "zIndex",
          "type": "number"
        }
      },
      "type": "object"
    },
    "HealthCheckData": {
      "additionalProperties": false,
      "properties": {
        "lastCheckTime": {
          "title": "lastCheckTime",
          "type": "number"
        },
        "message": {
          "title": "message",
          "type": "string"
        },
        "status": {
          "enum": [
            "ERROR",
            "MAINTENANCE",
            "OK"
          ],
          "title": "status",
          "type": "string"
        }
      },
      "required": [
        "lastCheckTime",
        "message",
        "status"
      ],
      "type": "object"
    },
    "ImageArcGISRestConfig": {
      "additionalProperties": false,
      "properties": {
        "arcServerType": {
          "title": "arcServerType",
          "type": "string"
        },
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images.  Note that\nyou must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "hidpi": {
          "description": "Use the `ol/Map#pixelRatio` value when requesting the image from\nthe remote server.",
          "title": "hidpi",
          "type": "boolean"
        },
        "imageSmoothing": {
          "description": "Deprecated.  Use the `interpolate` option instead.",
          "title": "imageSmoothing",
          "type": "boolean"
        },
        "interpolate": {
          "description": "Use interpolated values when resampling.  By default,\nlinear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.",
          "title": "interpolate",
          "type": "boolean"
        },
        "olClass": {
          "enum": [
            "ImageArcGISRest"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "params": {
          "additionalProperties": {},
          "description": "ArcGIS Rest parameters. This field is optional. Service\ndefaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n`IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\nwill be set dynamically. Set `LAYERS` to override the default service layer visibility. See\nhttps://developers.arcgis.com/rest/services-reference/export-map.htm\nfor further reference.",
          "title": "params",
          "type": "object"
        },
        "projection": {
          "description": "Projection. Default is the view projection.\nThe projection code must contain a numeric end portion separated by :\nor the entire code must form a valid ArcGIS SpatialReference definition.",
          "title": "projection",
          "type": "string"
        },
        "ratio": {
          "description": "Ratio. `1` means image requests are the size of the map viewport,\n`2` means twice the size of the map viewport, and so on.",
          "title": "ratio",
          "type": "number"
        },
        "resolutions": {
          "description": "Resolutions. If specified, requests will be made for\nthese resolutions only.",
          "items": {
            "type": "number"
          },
          "title": "resolutions",
          "type": "array"
        },
        "url": {
          "description": "ArcGIS Rest service URL for a Map Service or Image Service. The url\nshould include /MapServer or /ImageServer.",
          "title": "url",
          "type": "string"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "ImageArcGISRestConfig",
      "type": "object"
    },
    "ImageLayerConfig": {
      "additionalProperties": false,
      "properties": {
        "aoClick": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoClickLocalConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteWMSConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteMapServerConfig"
            }
          ],
          "title": "aoClick"
        },
        "aoColumns": {
          "$ref": "#/definitions/AoColumnConfig",
          "title": "aoColumns"
        },
        "aoCreate": {
          "$ref": "#/definitions/AoCreateConfig",
          "title": "aoCreate"
        },
        "aoInit": {
          "$ref": "#/definitions/AoInitConfig",
          "title": "aoInit"
        },
        "aoLegend": {
          "$ref": "#/definitions/AoLegendConfig",
          "title": "aoLegend"
        },
        "aoLoader": {
          "$ref": "#/definitions/AoLoaderConfig",
          "title": "aoLoader"
        },
        "aoPolygonSelect": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoPolygonSelectLocalConfig"
            },
            {
              "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
            }
          ],
          "title": "aoPolygonSelect"
        },
        "className": {
          "description": "A CSS class name to set to the layer element.",
          "title": "className",
          "type": "string"
        },
        "extent": {
          "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
          "items": {
            "type": "number"
          },
          "title": "extent",
          "type": "array"
        },
        "maxResolution": {
          "description": "The maximum resolution (exclusive) below which this layer will\nbe visible.",
          "title": "maxResolution",
          "type": "number"
        },
        "maxZoom": {
          "description": "The maximum view zoom level (inclusive) at which this layer will\nbe visible.",
          "title": "maxZoom",
          "type": "number"
        },
        "minResolution": {
          "description": "The minimum resolution (inclusive) at which this layer will be\nvisible.",
          "title": "minResolution",
          "type": "number"
        },
        "minZoom": {
          "description": "The minimum view zoom level (exclusive) above which this layer will be\nvisible.",
          "title": "minZoom",
          "type": "number"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "ImageLayer"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olSource": {
          "anyOf": [
            {
              "$ref": "#/definitions/ImageWMSConfig"
            },
            {
              "$ref": "#/definitions/ImageArcGISRestConfig"
            }
          ],
          "title": "olSource"
        },
        "opacity": {
          "description": "Opacity (0, 1).",
          "title": "opacity",
          "type": "number"
        },
        "visible": {
          "description": "Visibility.",
          "title": "visible",
          "type": "boolean"
        },
        "zIndex": {
          "description": "The z-index for layer rendering.  At rendering time, the layers\nwill be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\nfor layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\nmethod was used.",
          "title": "zIndex",
          "type": "number"
        }
      },
      "required": [
        "olClass",
        "olSource"
      ],
      "title": "ImageLayerConfig",
      "type": "object"
    },
    "ImageWMSConfig": {
      "additionalProperties": false,
      "properties": {
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images.  Note that\nyou must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "hidpi": {
          "description": "Use the `ol/Map#pixelRatio` value when requesting\nthe image from the remote server.",
          "title": "hidpi",
          "type": "boolean"
        },
        "imageSmoothing": {
          "description": "Deprecated.  Use the `interpolate` option instead.",
          "title": "imageSmoothing",
          "type": "boolean"
        },
        "interpolate": {
          "description": "Use interpolated values when resampling.  By default,\nlinear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.",
          "title": "interpolate",
          "type": "boolean"
        },
        "olClass": {
          "enum": [
            "ImageWMS"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "params": {
          "additionalProperties": {},
          "description": "WMS request parameters.\nAt least a `LAYERS` param is required. `STYLES` is\n`''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\nand `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.",
          "title": "params",
          "type": "object"
        },
        "projection": {
          "description": "Projection. Default is the view projection.",
          "title": "projection",
          "type": "string"
        },
        "ratio": {
          "description": "Ratio. `1` means image requests are the size of the map viewport, `2` means\ntwice the width and height of the map viewport, and so on. Must be `1` or\nhigher.",
          "title": "ratio",
          "type": "number"
        },
        "resolutions": {
          "description": "Resolutions.\nIf specified, requests will be made for these resolutions only.",
          "items": {
            "type": "number"
          },
          "title": "resolutions",
          "type": "array"
        },
        "serverType": {
          "description": "The type of\nthe remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.",
          "title": "serverType"
        },
        "url": {
          "description": "WMS service URL.",
          "title": "url",
          "type": "string"
        }
      },
      "required": [
        "olClass",
        "params",
        "url"
      ],
      "title": "ImageWMSConfig",
      "type": "object"
    },
    "KMZConfig": {
      "additionalProperties": false,
      "properties": {
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images. Note that you must provide a\n`crossOrigin` value if you want to access pixel data with the Canvas renderer.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "extractStyles": {
          "description": "Extract styles from the KML.",
          "title": "extractStyles",
          "type": "boolean"
        },
        "iconUrlFunction": {
          "additionalProperties": false,
          "description": "A function that takes a url `{string}` and returns a url `{string}`.\nMight be used to change an icon path or to substitute a\ndata url obtained from a KMZ array buffer.",
          "title": "iconUrlFunction",
          "type": "object"
        },
        "olClass": {
          "enum": [
            "KMZ"
          ],
          "title": "olClass",
          "type": "string"
        },
        "showPointNames": {
          "description": "Show names as labels for placemarks which contain points.",
          "title": "showPointNames",
          "type": "boolean"
        },
        "writeStyles": {
          "description": "Write styles into KML.",
          "title": "writeStyles",
          "type": "boolean"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "KMZConfig",
      "type": "object"
    },
    "LayerGroupType": {
      "enum": [
        "layer-group"
      ],
      "type": "string"
    },
    "LayerMetaData": {
      "additionalProperties": false,
      "properties": {
        "comments": {
          "title": "comments",
          "type": "string"
        },
        "dataCategory": {
          "enum": [
            "Engineering",
            "Other",
            "Permitting",
            "Real Estate"
          ],
          "title": "dataCategory",
          "type": "string"
        },
        "dateOfStudy": {
          "title": "dateOfStudy",
          "type": "number"
        },
        "generationCapacity": {
          "title": "generationCapacity",
          "type": "number"
        }
      },
      "required": [
        "comments",
        "dateOfStudy",
        "generationCapacity"
      ],
      "type": "object"
    },
    "LayerOmitList": {
      "enum": [
        "background",
        "map",
        "properties",
        "renderOrder",
        "source",
        "strategy",
        "style"
      ],
      "type": "string"
    },
    "LayerOptionConfig": {
      "additionalProperties": false,
      "type": "object"
    },
    "LayerOptionToggleConfig": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "title": "enabled",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "MVTConfig": {
      "additionalProperties": false,
      "properties": {
        "geometryName": {
          "description": "Geometry name to use when creating features.",
          "title": "geometryName",
          "type": "string"
        },
        "idProperty": {
          "description": "Optional property that will be assigned as the feature id and removed from the properties.\nlayers.",
          "title": "idProperty",
          "type": "string"
        },
        "layerName": {
          "description": "Name of the feature attribute that holds the layer name.",
          "title": "layerName",
          "type": "string"
        },
        "layers": {
          "description": "Layers to read features from. If not provided, features will be read from all",
          "items": {
            "type": "string"
          },
          "title": "layers",
          "type": "array"
        },
        "olClass": {
          "enum": [
            "MVT"
          ],
          "title": "olClass",
          "type": "string"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "MVTConfig",
      "type": "object"
    },
    "ProjectionId": {
      "type": "string"
    },
    "Record<string,string|number>": {
      "additionalProperties": false,
      "title": "Record<string,string|number>",
      "type": "object"
    },
    "SourceOmitList": {
      "enum": [
        "features",
        "format",
        "imageLoadFunction",
        "loader",
        "tileClass",
        "tileGrid",
        "tileLoadFunction",
        "tileUrlFunction",
        "zDirection"
      ],
      "type": "string"
    },
    "TileArcGISRestConfig": {
      "additionalProperties": false,
      "properties": {
        "arcServerType": {
          "title": "arcServerType",
          "type": "string"
        },
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "cacheSize": {
          "description": "Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.",
          "title": "cacheSize",
          "type": "number"
        },
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images.  Note that\nyou must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "hidpi": {
          "description": "Use the `ol/Map#pixelRatio` value when requesting\nthe image from the remote server.",
          "title": "hidpi",
          "type": "boolean"
        },
        "imageSmoothing": {
          "description": "Deprecated.  Use the `interpolate` option instead.",
          "title": "imageSmoothing",
          "type": "boolean"
        },
        "interpolate": {
          "description": "Use interpolated values when resampling.  By default,\nlinear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.",
          "title": "interpolate",
          "type": "boolean"
        },
        "olClass": {
          "enum": [
            "TileArcGISRest"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "params": {
          "additionalProperties": {},
          "description": "ArcGIS Rest parameters. This field is optional. Service defaults will be\nused for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\ndefault. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\nand `IMAGESR` will be set dynamically. Set `LAYERS` to\noverride the default service layer visibility. See\nhttps://developers.arcgis.com/rest/services-reference/export-map.htm\nfor further reference.",
          "title": "params",
          "type": "object"
        },
        "projection": {
          "description": "Projection. Default is the view projection.\nThe projection code must contain a numeric end portion separated by :\nor the entire code must form a valid ArcGIS SpatialReference definition.",
          "title": "projection",
          "type": "string"
        },
        "reprojectionErrorThreshold": {
          "description": "Maximum allowed reprojection error (in pixels).\nHigher values can increase reprojection performance, but decrease precision.",
          "title": "reprojectionErrorThreshold",
          "type": "number"
        },
        "transition": {
          "description": "Duration of the opacity transition for rendering.  To disable the opacity\ntransition, pass `transition: 0`.",
          "title": "transition",
          "type": "number"
        },
        "url": {
          "description": "ArcGIS Rest service URL for a Map Service or Image Service. The\nurl should include /MapServer or /ImageServer.",
          "title": "url",
          "type": "string"
        },
        "urls": {
          "description": "ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\nService supports multiple urls for export requests.",
          "items": {
            "type": "string"
          },
          "title": "urls",
          "type": "array"
        },
        "wrapX": {
          "description": "Whether to wrap the world horizontally.",
          "title": "wrapX",
          "type": "boolean"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "TileArcGISRestConfig",
      "type": "object"
    },
    "TileGridConfig": {
      "additionalProperties": false,
      "properties": {
        "extent": {
          "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
          "items": {
            "type": "number"
          },
          "title": "extent",
          "type": "array"
        },
        "matrixIds": {
          "description": "matrix IDs. The length of this array needs\nto match the length of the `resolutions` array.",
          "items": {
            "type": "string"
          },
          "title": "matrixIds",
          "type": "array"
        },
        "origin": {
          "description": "An array of numbers representing an xy coordinate. Example: `[16, 48]`.",
          "items": {
            "type": "number"
          },
          "title": "origin",
          "type": "array"
        },
        "origins": {
          "description": "Tile grid origins,\ni.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\ngiven, the array length should match the length of the `resolutions` array, i.e.\neach resolution can have a different origin. Tile coordinates increase left to\nright and downwards. If not specified, `extent` or `origin` must be provided.",
          "items": {
            "description": "An array of numbers representing an xy coordinate. Example: `[16, 48]`.",
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "title": "origins",
          "type": "array"
        },
        "resolutions": {
          "description": "Resolutions. The array index of each\nresolution needs to match the zoom level. This means that even if a `minZoom`\nis configured, the resolutions array will have a length of `maxZoom + 1`",
          "items": {
            "type": "number"
          },
          "title": "resolutions",
          "type": "array"
        },
        "sizes": {
          "description": "Number of tile rows and columns\nof the grid for each zoom level. The values here are the `TileMatrixWidth` and\n`TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\ndefine each zoom level's extent together with the `origin` or `origins`.\nA grid `extent` can be configured in addition, and will further limit the extent for\nwhich tile requests are made by sources. If the bottom-left corner of\nan extent is used as `origin` or `origins`, then the `y` value must be\nnegative because OpenLayers tile coordinates use the top left as the origin.",
          "items": {
            "description": "An array of numbers representing a size: `[width, height]`.",
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "title": "sizes",
          "type": "array"
        },
        "tileSize": {
          "anyOf": [
            {
              "description": "An array of numbers representing a size: `[width, height]`.",
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "Tile size.",
          "title": "tileSize"
        },
        "tileSizes": {
          "description": "Tile sizes. The length of\nthis array needs to match the length of the `resolutions` array.",
          "items": {
            "description": "An array of numbers representing a size: `[width, height]`.",
            "items": {
              "type": "number"
            },
            "type": "array"
          },
          "title": "tileSizes",
          "type": "array"
        }
      },
      "required": [
        "matrixIds",
        "resolutions"
      ],
      "type": "object"
    },
    "TileLayerConfig": {
      "additionalProperties": false,
      "properties": {
        "aoClick": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoClickLocalConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteWMSConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteMapServerConfig"
            }
          ],
          "title": "aoClick"
        },
        "aoColumns": {
          "$ref": "#/definitions/AoColumnConfig",
          "title": "aoColumns"
        },
        "aoCreate": {
          "$ref": "#/definitions/AoCreateConfig",
          "title": "aoCreate"
        },
        "aoInit": {
          "$ref": "#/definitions/AoInitConfig",
          "title": "aoInit"
        },
        "aoLegend": {
          "$ref": "#/definitions/AoLegendConfig",
          "title": "aoLegend"
        },
        "aoLoader": {
          "$ref": "#/definitions/AoLoaderConfig",
          "title": "aoLoader"
        },
        "aoPolygonSelect": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoPolygonSelectLocalConfig"
            },
            {
              "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
            }
          ],
          "title": "aoPolygonSelect"
        },
        "aoStyle": {
          "$ref": "#/definitions/AoStyleConfig",
          "title": "aoStyle"
        },
        "className": {
          "description": "A CSS class name to set to the layer element.",
          "title": "className",
          "type": "string"
        },
        "extent": {
          "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
          "items": {
            "type": "number"
          },
          "title": "extent",
          "type": "array"
        },
        "maxResolution": {
          "description": "The maximum resolution (exclusive) below which this layer will\nbe visible.",
          "title": "maxResolution",
          "type": "number"
        },
        "maxZoom": {
          "description": "The maximum view zoom level (inclusive) at which this layer will\nbe visible.",
          "title": "maxZoom",
          "type": "number"
        },
        "minResolution": {
          "description": "The minimum resolution (inclusive) at which this layer will be\nvisible.",
          "title": "minResolution",
          "type": "number"
        },
        "minZoom": {
          "description": "The minimum view zoom level (exclusive) above which this layer will be\nvisible.",
          "title": "minZoom",
          "type": "number"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "TileLayer"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olSource": {
          "anyOf": [
            {
              "$ref": "#/definitions/TileArcGISRestConfig"
            },
            {
              "$ref": "#/definitions/TileWMSConfig"
            },
            {
              "$ref": "#/definitions/XYZConfig"
            },
            {
              "$ref": "#/definitions/WMTSConfig"
            }
          ],
          "title": "olSource"
        },
        "opacity": {
          "description": "Opacity (0, 1).",
          "title": "opacity",
          "type": "number"
        },
        "visible": {
          "description": "Visibility.",
          "title": "visible",
          "type": "boolean"
        },
        "zIndex": {
          "description": "The z-index for layer rendering.  At rendering time, the layers\nwill be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\nfor layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\nmethod was used.",
          "title": "zIndex",
          "type": "number"
        }
      },
      "required": [
        "olClass",
        "olSource"
      ],
      "title": "TileLayerConfig",
      "type": "object"
    },
    "TileWMSConfig": {
      "additionalProperties": false,
      "properties": {
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "attributionsCollapsible": {
          "description": "Attributions are collapsible.",
          "title": "attributionsCollapsible",
          "type": "boolean"
        },
        "cacheSize": {
          "description": "Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.",
          "title": "cacheSize",
          "type": "number"
        },
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images.  Note that\nyou must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "gutter": {
          "description": "The size in pixels of the gutter around image tiles to ignore. By setting\nthis property to a non-zero value, images will be requested that are wider\nand taller than the tile size by a value of `2 x gutter`.\nUsing a non-zero value allows artifacts of rendering at tile edges to be\nignored. If you control the WMS service it is recommended to address\n\"artifacts at tile edges\" issues by properly configuring the WMS service. For\nexample, MapServer has a `tile_map_edge_buffer` configuration parameter for\nthis. See https://mapserver.org/output/tile_mode.html.",
          "title": "gutter",
          "type": "number"
        },
        "hidpi": {
          "description": "Use the `ol/Map#pixelRatio` value when requesting\nthe image from the remote server.",
          "title": "hidpi",
          "type": "boolean"
        },
        "imageSmoothing": {
          "description": "Deprecated.  Use the `interpolate` option instead.",
          "title": "imageSmoothing",
          "type": "boolean"
        },
        "interpolate": {
          "description": "Use interpolated values when resampling.  By default,\nlinear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.",
          "title": "interpolate",
          "type": "boolean"
        },
        "olClass": {
          "enum": [
            "TileWMS"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "params": {
          "additionalProperties": {},
          "description": "WMS request parameters.\nAt least a `LAYERS` param is required. `STYLES` is\n`''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\nand `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.",
          "title": "params",
          "type": "object"
        },
        "projection": {
          "description": "Projection. Default is the view projection.",
          "title": "projection",
          "type": "string"
        },
        "reprojectionErrorThreshold": {
          "description": "Maximum allowed reprojection error (in pixels).\nHigher values can increase reprojection performance, but decrease precision.",
          "title": "reprojectionErrorThreshold",
          "type": "number"
        },
        "serverType": {
          "description": "The type of the remote WMS server. Currently only used when `hidpi` is\n`true`.",
          "title": "serverType"
        },
        "transition": {
          "description": "Duration of the opacity transition for rendering.\nTo disable the opacity transition, pass `transition: 0`.",
          "title": "transition",
          "type": "number"
        },
        "url": {
          "description": "WMS service URL.",
          "title": "url",
          "type": "string"
        },
        "urls": {
          "description": "WMS service urls.\nUse this instead of `url` when the WMS supports multiple urls for GetMap requests.",
          "items": {
            "type": "string"
          },
          "title": "urls",
          "type": "array"
        },
        "wrapX": {
          "description": "Whether to wrap the world horizontally.\nWhen set to `false`, only one world\nwill be rendered. When `true`, tiles will be requested for one world only,\nbut they will be wrapped horizontally to render multiple worlds.",
          "title": "wrapX",
          "type": "boolean"
        }
      },
      "required": [
        "olClass",
        "params"
      ],
      "title": "TileWMSConfig",
      "type": "object"
    },
    "VectorLayerConfig": {
      "additionalProperties": false,
      "properties": {
        "aoClick": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoClickLocalConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteWMSConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteMapServerConfig"
            }
          ],
          "title": "aoClick"
        },
        "aoColumns": {
          "$ref": "#/definitions/AoColumnConfig",
          "title": "aoColumns"
        },
        "aoCreate": {
          "$ref": "#/definitions/AoCreateConfig",
          "title": "aoCreate"
        },
        "aoInit": {
          "$ref": "#/definitions/AoInitConfig",
          "title": "aoInit"
        },
        "aoLegend": {
          "$ref": "#/definitions/AoLegendConfig",
          "title": "aoLegend"
        },
        "aoLoader": {
          "$ref": "#/definitions/AoLoaderConfig",
          "title": "aoLoader"
        },
        "aoPolygonSelect": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoPolygonSelectLocalConfig"
            },
            {
              "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
            }
          ],
          "title": "aoPolygonSelect"
        },
        "aoStyle": {
          "$ref": "#/definitions/AoStyleConfig",
          "title": "aoStyle"
        },
        "className": {
          "description": "A CSS class name to set to the layer element.",
          "title": "className",
          "type": "string"
        },
        "extent": {
          "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
          "items": {
            "type": "number"
          },
          "title": "extent",
          "type": "array"
        },
        "maxResolution": {
          "description": "The maximum resolution (exclusive) below which this layer will\nbe visible.",
          "title": "maxResolution",
          "type": "number"
        },
        "maxZoom": {
          "description": "The maximum view zoom level (inclusive) at which this layer will\nbe visible.",
          "title": "maxZoom",
          "type": "number"
        },
        "minResolution": {
          "description": "The minimum resolution (inclusive) at which this layer will be\nvisible.",
          "title": "minResolution",
          "type": "number"
        },
        "minZoom": {
          "description": "The minimum view zoom level (exclusive) above which this layer will be\nvisible.",
          "title": "minZoom",
          "type": "number"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "VectorLayer"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olSource": {
          "$ref": "#/definitions/VectorSourceConfig",
          "title": "olSource"
        },
        "opacity": {
          "description": "Opacity (0, 1).",
          "title": "opacity",
          "type": "number"
        },
        "visible": {
          "description": "Visibility.",
          "title": "visible",
          "type": "boolean"
        },
        "zIndex": {
          "description": "The z-index for layer rendering.  At rendering time, the layers\nwill be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\nfor layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\nmethod was used.",
          "title": "zIndex",
          "type": "number"
        }
      },
      "required": [
        "olClass",
        "olSource"
      ],
      "title": "VectorLayerConfig",
      "type": "object"
    },
    "VectorSourceConfig": {
      "additionalProperties": false,
      "properties": {
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "olClass": {
          "enum": [
            "VectorSource"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "overlaps": {
          "description": "This source may have overlapping geometries.\nSetting this to `false` (e.g. for sources with polygons that represent administrative\nboundaries or TopoJSON sources) allows the renderer to optimise fill and\nstroke operations.",
          "title": "overlaps",
          "type": "boolean"
        },
        "projection": {
          "title": "projection",
          "type": "string"
        },
        "strategy": {
          "additionalProperties": false,
          "description": "A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\nreturns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\nis one of the standard {@link module:ol/loadingstrategy} strategies.",
          "title": "strategy",
          "type": "object"
        },
        "url": {
          "anyOf": [
            {
              "additionalProperties": false,
              "description": "{@link module:ol/source/Vector~VectorSource} sources use a function of this type to\nget the url to load features from.\n\nThis function takes an {@link module:ol/extent~Extent} representing the area\nto be loaded, a `{number}` representing the resolution (map units per pixel)\nand an {@link module:ol/proj/Projection~Projection} for the projection  as\narguments and returns a `{string}` representing the URL.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Setting this option instructs the source to load features using an XHR loader\n(see {@link module:ol/featureloader.xhr}). Use a `string` and an\n{@link module:ol/loadingstrategy.all} for a one-off download of all features from\nthe given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\nother loading strategies.\nRequires `format` to be set as well.\nWhen default XHR feature loader is provided, the features will\nbe transformed from the data projection to the view projection\nduring parsing. If your remote data source does not advertise its projection\nproperly, this transformation will be incorrect. For some formats, the\ndefault projection (usually EPSG:4326) can be overridden by setting the\ndataProjection constructor option on the format.\nNote that if a source contains non-feature data, such as a GeoJSON geometry\nor a KML NetworkLink, these will be ignored. Use a custom loader to load these.",
          "title": "url"
        },
        "useSpatialIndex": {
          "description": "By default, an RTree is used as spatial index. When features are removed and\nadded frequently, and the total number of features is low, setting this to\n`false` may improve performance.\n\nNote that\n{@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n{@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n{@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\nset to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\nthrough all features.\n\nWhen set to `false`, the features will be maintained in an\n{@link module:ol/Collection~Collection}, which can be retrieved through\n{@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.",
          "title": "useSpatialIndex",
          "type": "boolean"
        },
        "wrapX": {
          "description": "Wrap the world horizontally. For vector editing across the\n-180° and 180° meridians to work properly, this should be set to `false`. The\nresulting geometry coordinates will then exceed the world bounds.",
          "title": "wrapX",
          "type": "boolean"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "VectorSourceConfig",
      "type": "object"
    },
    "VectorTileLayerConfig": {
      "additionalProperties": false,
      "properties": {
        "aoClick": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoClickLocalConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteWMSConfig"
            },
            {
              "$ref": "#/definitions/AoClickRemoteMapServerConfig"
            }
          ],
          "title": "aoClick"
        },
        "aoColumns": {
          "$ref": "#/definitions/AoColumnConfig",
          "title": "aoColumns"
        },
        "aoCreate": {
          "$ref": "#/definitions/AoCreateConfig",
          "title": "aoCreate"
        },
        "aoInit": {
          "$ref": "#/definitions/AoInitConfig",
          "title": "aoInit"
        },
        "aoLegend": {
          "$ref": "#/definitions/AoLegendConfig",
          "title": "aoLegend"
        },
        "aoLoader": {
          "$ref": "#/definitions/AoLoaderConfig",
          "title": "aoLoader"
        },
        "aoPolygonSelect": {
          "anyOf": [
            {
              "$ref": "#/definitions/AoPolygonSelectLocalConfig"
            },
            {
              "$ref": "#/definitions/AoPolygonSelectRemoteConfig"
            }
          ],
          "title": "aoPolygonSelect"
        },
        "aoStyle": {
          "$ref": "#/definitions/AoStyleConfig",
          "title": "aoStyle"
        },
        "className": {
          "description": "A CSS class name to set to the layer element.",
          "title": "className",
          "type": "string"
        },
        "declutter": {
          "description": "Declutter images and text. Decluttering is applied to all\nimage and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\nis defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\nHigher z-index means higher priority. Within the same z-index, a feature rendered before another has\nhigher priority.\n\nAs an optimization decluttered features from layers with the same `className` are rendered above\nthe fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\nbehavior and place declutterd features with their own layer configure the layer with a `className`\nother than `ol-layer`.",
          "title": "declutter",
          "type": "boolean"
        },
        "extent": {
          "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
          "items": {
            "type": "number"
          },
          "title": "extent",
          "type": "array"
        },
        "maxResolution": {
          "description": "The maximum resolution (exclusive) below which this layer will\nbe visible.",
          "title": "maxResolution",
          "type": "number"
        },
        "maxZoom": {
          "description": "The maximum view zoom level (inclusive) at which this layer will\nbe visible.",
          "title": "maxZoom",
          "type": "number"
        },
        "minResolution": {
          "description": "The minimum resolution (inclusive) at which this layer will be\nvisible.",
          "title": "minResolution",
          "type": "number"
        },
        "minZoom": {
          "description": "The minimum view zoom level (exclusive) above which this layer will be\nvisible.",
          "title": "minZoom",
          "type": "number"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "VectorTileLayer"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olSource": {
          "$ref": "#/definitions/VectorTileSourceConfig",
          "title": "olSource"
        },
        "opacity": {
          "description": "Opacity (0, 1).",
          "title": "opacity",
          "type": "number"
        },
        "preload": {
          "description": "Preload. Load low-resolution tiles up to `preload` levels. `0`\nmeans no preloading.",
          "title": "preload",
          "type": "number"
        },
        "renderBuffer": {
          "description": "The buffer in pixels around the tile extent used by the\nrenderer when getting features from the vector tile for the rendering or hit-detection.\nRecommended value: Vector tiles are usually generated with a buffer, so this value should match\nthe largest possible buffer of the used tiles. It should be at least the size of the largest\npoint symbol or line width.",
          "title": "renderBuffer",
          "type": "number"
        },
        "renderMode": {
          "description": "Render mode for vector tiles:\n* `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\nanimations. Point symbols and texts are accurately rendered as vectors and can stay upright on\nrotated views.\n* `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\ntile layers with only a few rendered features (e.g. for highlighting a subset of features of\nanother layer with the same source).",
          "title": "renderMode"
        },
        "updateWhileAnimating": {
          "description": "When set to `true`, feature batches will be\nrecreated during animations. This means that no vectors will be shown clipped, but the setting\nwill have a performance impact for large amounts of vector data. When set to `false`, batches\nwill be recreated when no animation is active.",
          "title": "updateWhileAnimating",
          "type": "boolean"
        },
        "updateWhileInteracting": {
          "description": "When set to `true`, feature batches will be\nrecreated during interactions. See also `updateWhileAnimating`.",
          "title": "updateWhileInteracting",
          "type": "boolean"
        },
        "useInterimTilesOnError": {
          "description": "Use interim tiles on error.",
          "title": "useInterimTilesOnError",
          "type": "boolean"
        },
        "visible": {
          "description": "Visibility.",
          "title": "visible",
          "type": "boolean"
        },
        "zIndex": {
          "description": "The z-index for layer rendering.  At rendering time, the layers\nwill be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\nfor layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\nmethod was used.",
          "title": "zIndex",
          "type": "number"
        }
      },
      "required": [
        "olClass",
        "olSource"
      ],
      "title": "VectorTileLayerConfig",
      "type": "object"
    },
    "VectorTileSourceConfig": {
      "additionalProperties": false,
      "properties": {
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "attributionsCollapsible": {
          "description": "Attributions are collapsible.",
          "title": "attributionsCollapsible",
          "type": "boolean"
        },
        "cacheSize": {
          "description": "Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.",
          "title": "cacheSize",
          "type": "number"
        },
        "extent": {
          "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
          "items": {
            "type": "number"
          },
          "title": "extent",
          "type": "array"
        },
        "maxResolution": {
          "description": "Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.",
          "title": "maxResolution",
          "type": "number"
        },
        "maxZoom": {
          "description": "Optional max zoom level. Not used if `tileGrid` is provided.",
          "title": "maxZoom",
          "type": "number"
        },
        "minZoom": {
          "description": "Optional min zoom level. Not used if `tileGrid` is provided.",
          "title": "minZoom",
          "type": "number"
        },
        "olClass": {
          "enum": [
            "VectorTileSource"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "overlaps": {
          "description": "This source may have overlapping geometries. Setting this\nto `false` (e.g. for sources with polygons that represent administrative\nboundaries or TopoJSON sources) allows the renderer to optimise fill and\nstroke operations.",
          "title": "overlaps",
          "type": "boolean"
        },
        "projection": {
          "description": "Projection of the tile grid.",
          "title": "projection",
          "type": "string"
        },
        "state": {
          "description": "Source state.",
          "title": "state"
        },
        "tileSize": {
          "anyOf": [
            {
              "description": "An array of numbers representing a size: `[width, height]`.",
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "Optional tile size. Not used if `tileGrid` is provided.",
          "title": "tileSize"
        },
        "transition": {
          "description": "A duration for tile opacity\ntransitions in milliseconds. A duration of 0 disables the opacity transition.",
          "title": "transition",
          "type": "number"
        },
        "url": {
          "description": "URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\nA `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\nused instead of defining each one separately in the `urls` option.",
          "title": "url",
          "type": "string"
        },
        "urls": {
          "description": "An array of URL templates.",
          "items": {
            "type": "string"
          },
          "title": "urls",
          "type": "array"
        },
        "wrapX": {
          "description": "Whether to wrap the world horizontally.\nWhen set to `false`, only one world\nwill be rendered. When set to `true`, tiles will be wrapped horizontally to\nrender multiple worlds.",
          "title": "wrapX",
          "type": "boolean"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "VectorTileSourceConfig",
      "type": "object"
    },
    "WMTSConfig": {
      "additionalProperties": false,
      "properties": {
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "attributionsCollapsible": {
          "description": "Attributions are collapsible.",
          "title": "attributionsCollapsible",
          "type": "boolean"
        },
        "cacheSize": {
          "description": "Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.",
          "title": "cacheSize",
          "type": "number"
        },
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images.  Note that\nyou must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "dimensions": {
          "description": "Additional \"dimensions\" for tile requests.\nThis is an object with properties named like the advertised WMTS dimensions.",
          "title": "dimensions"
        },
        "imageSmoothing": {
          "description": "Deprecated.  Use the `interpolate` option instead.",
          "title": "imageSmoothing",
          "type": "boolean"
        },
        "interpolate": {
          "description": "Use interpolated values when resampling.  By default,\nlinear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.",
          "title": "interpolate",
          "type": "boolean"
        },
        "layer": {
          "description": "Layer name as advertised in the WMTS capabilities.",
          "title": "layer",
          "type": "string"
        },
        "matrixSet": {
          "description": "Matrix set.",
          "title": "matrixSet",
          "type": "string"
        },
        "olClass": {
          "enum": [
            "WMTS"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "olTileGrid": {
          "additionalProperties": false,
          "properties": {
            "extent": {
              "description": "An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.",
              "items": {
                "type": "number"
              },
              "title": "extent",
              "type": "array"
            },
            "matrixIds": {
              "description": "matrix IDs. The length of this array needs\nto match the length of the `resolutions` array.",
              "items": {
                "type": "string"
              },
              "title": "matrixIds",
              "type": "array"
            },
            "origin": {
              "description": "An array of numbers representing an xy coordinate. Example: `[16, 48]`.",
              "items": {
                "type": "number"
              },
              "title": "origin",
              "type": "array"
            },
            "origins": {
              "description": "Tile grid origins,\ni.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\ngiven, the array length should match the length of the `resolutions` array, i.e.\neach resolution can have a different origin. Tile coordinates increase left to\nright and downwards. If not specified, `extent` or `origin` must be provided.",
              "items": {
                "description": "An array of numbers representing an xy coordinate. Example: `[16, 48]`.",
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "title": "origins",
              "type": "array"
            },
            "resolutions": {
              "description": "Resolutions. The array index of each\nresolution needs to match the zoom level. This means that even if a `minZoom`\nis configured, the resolutions array will have a length of `maxZoom + 1`",
              "items": {
                "type": "number"
              },
              "title": "resolutions",
              "type": "array"
            },
            "sizes": {
              "description": "Number of tile rows and columns\nof the grid for each zoom level. The values here are the `TileMatrixWidth` and\n`TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\ndefine each zoom level's extent together with the `origin` or `origins`.\nA grid `extent` can be configured in addition, and will further limit the extent for\nwhich tile requests are made by sources. If the bottom-left corner of\nan extent is used as `origin` or `origins`, then the `y` value must be\nnegative because OpenLayers tile coordinates use the top left as the origin.",
              "items": {
                "description": "An array of numbers representing a size: `[width, height]`.",
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "title": "sizes",
              "type": "array"
            },
            "tileSize": {
              "anyOf": [
                {
                  "description": "An array of numbers representing a size: `[width, height]`.",
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "type": "number"
                }
              ],
              "description": "Tile size.",
              "title": "tileSize"
            },
            "tileSizes": {
              "description": "Tile sizes. The length of\nthis array needs to match the length of the `resolutions` array.",
              "items": {
                "description": "An array of numbers representing a size: `[width, height]`.",
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              "title": "tileSizes",
              "type": "array"
            }
          },
          "required": [
            "matrixIds",
            "resolutions"
          ],
          "title": "olTileGrid",
          "type": "object"
        },
        "projection": {
          "description": "Projection. Default is the view projection.",
          "title": "projection",
          "type": "string"
        },
        "reprojectionErrorThreshold": {
          "description": "Maximum allowed reprojection error (in pixels).\nHigher values can increase reprojection performance, but decrease precision.",
          "title": "reprojectionErrorThreshold",
          "type": "number"
        },
        "requestEncoding": {
          "description": "Request encoding.",
          "title": "requestEncoding"
        },
        "style": {
          "title": "style",
          "type": "string"
        },
        "tilePixelRatio": {
          "description": "The pixel ratio used by the tile service.\nFor example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\nby 512px images (for retina/hidpi devices) then `tilePixelRatio`\nshould be set to `2`.",
          "title": "tilePixelRatio",
          "type": "number"
        },
        "transition": {
          "description": "Duration of the opacity transition for rendering.\nTo disable the opacity transition, pass `transition: 0`.",
          "title": "transition",
          "type": "number"
        },
        "url": {
          "description": "A URL for the service.\nFor the RESTful request encoding, this is a URL\ntemplate.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\nfor example `subdomain{a-f}.domain.com`, may be used instead of defining\neach one separately in the `urls` option.",
          "title": "url",
          "type": "string"
        },
        "urls": {
          "description": "An array of URLs.\nRequests will be distributed among the URLs in this array.",
          "items": {
            "type": "string"
          },
          "title": "urls",
          "type": "array"
        },
        "version": {
          "description": "WMTS version.",
          "title": "version",
          "type": "string"
        },
        "wrapX": {
          "description": "Whether to wrap the world horizontally.",
          "title": "wrapX",
          "type": "boolean"
        }
      },
      "required": [
        "layer",
        "matrixSet",
        "olClass",
        "olTileGrid"
      ],
      "title": "WMTSConfig",
      "type": "object"
    },
    "XYZConfig": {
      "additionalProperties": false,
      "properties": {
        "attributions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "additionalProperties": false,
              "description": "A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\nan array of strings representing source attributions.",
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "description": "Attributions.",
          "title": "attributions"
        },
        "attributionsCollapsible": {
          "description": "Attributions are collapsible.",
          "title": "attributionsCollapsible",
          "type": "boolean"
        },
        "cacheSize": {
          "description": "Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.",
          "title": "cacheSize",
          "type": "number"
        },
        "crossOrigin": {
          "description": "The `crossOrigin` attribute for loaded images.  Note that\nyou must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.",
          "title": "crossOrigin",
          "type": [
            "null",
            "string"
          ]
        },
        "imageSmoothing": {
          "description": "Deprecated.  Use the `interpolate` option instead.",
          "title": "imageSmoothing",
          "type": "boolean"
        },
        "interpolate": {
          "description": "Use interpolated values when resampling.  By default,\nlinear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.",
          "title": "interpolate",
          "type": "boolean"
        },
        "maxResolution": {
          "description": "Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.",
          "title": "maxResolution",
          "type": "number"
        },
        "maxZoom": {
          "description": "Optional max zoom level. Not used if `tileGrid` is provided.",
          "title": "maxZoom",
          "type": "number"
        },
        "minZoom": {
          "description": "Optional min zoom level. Not used if `tileGrid` is provided.",
          "title": "minZoom",
          "type": "number"
        },
        "olClass": {
          "enum": [
            "XYZ"
          ],
          "title": "olClass",
          "type": "string"
        },
        "olFormat": {
          "anyOf": [
            {
              "$ref": "#/definitions/EsriJSONConfig"
            },
            {
              "$ref": "#/definitions/GeoJSONConfig"
            },
            {
              "$ref": "#/definitions/MVTConfig"
            },
            {
              "$ref": "#/definitions/AoMVTConfig"
            },
            {
              "$ref": "#/definitions/AoDrawingConfig"
            },
            {
              "$ref": "#/definitions/KMZConfig"
            }
          ],
          "title": "olFormat"
        },
        "opaque": {
          "description": "Whether the layer is opaque.",
          "title": "opaque",
          "type": "boolean"
        },
        "projection": {
          "description": "Projection.",
          "title": "projection",
          "type": "string"
        },
        "reprojectionErrorThreshold": {
          "description": "Maximum allowed reprojection error (in pixels).\nHigher values can increase reprojection performance, but decrease precision.",
          "title": "reprojectionErrorThreshold",
          "type": "number"
        },
        "tilePixelRatio": {
          "description": "The pixel ratio used by the tile service.\nFor example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\nby 512px images (for retina/hidpi devices) then `tilePixelRatio`\nshould be set to `2`.",
          "title": "tilePixelRatio",
          "type": "number"
        },
        "tileSize": {
          "anyOf": [
            {
              "description": "An array of numbers representing a size: `[width, height]`.",
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            {
              "type": "number"
            }
          ],
          "description": "The tile size used by the tile service.\nNot used if `tileGrid` is provided.",
          "title": "tileSize"
        },
        "transition": {
          "description": "Duration of the opacity transition for rendering.\nTo disable the opacity transition, pass `transition: 0`.",
          "title": "transition",
          "type": "number"
        },
        "url": {
          "description": "URL template. Must include `{x}`, `{y}` or `{-y}`,\nand `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\nmay be used instead of defining each one separately in the `urls` option.",
          "title": "url",
          "type": "string"
        },
        "urls": {
          "description": "An array of URL templates.",
          "items": {
            "type": "string"
          },
          "title": "urls",
          "type": "array"
        },
        "wrapX": {
          "description": "Whether to wrap the world horizontally.",
          "title": "wrapX",
          "type": "boolean"
        }
      },
      "required": [
        "olClass"
      ],
      "title": "XYZConfig",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "properties": {
    "accessKey": {
      "title": "accessKey",
      "type": "string"
    },
    "description": {
      "title": "description",
      "type": "string"
    },
    "layer": {
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/VectorLayerConfig"
          },
          {
            "$ref": "#/definitions/ImageLayerConfig"
          },
          {
            "$ref": "#/definitions/VectorTileLayerConfig"
          },
          {
            "$ref": "#/definitions/TileLayerConfig"
          }
        ]
      },
      "title": "layer",
      "type": "array"
    },
    "meta": {
      "additionalProperties": false,
      "properties": {
        "aoDevNotes": {
          "title": "aoDevNotes",
          "type": "string"
        },
        "archived": {
          "title": "archived",
          "type": "boolean"
        },
        "health": {
          "additionalProperties": false,
          "properties": {
            "lastCheckTime": {
              "title": "lastCheckTime",
              "type": "number"
            },
            "message": {
              "title": "message",
              "type": "string"
            },
            "status": {
              "enum": [
                "ERROR",
                "MAINTENANCE",
                "OK"
              ],
              "title": "status",
              "type": "string"
            }
          },
          "required": [
            "lastCheckTime",
            "message",
            "status"
          ],
          "title": "health",
          "type": "object"
        },
        "hostedBy": {
          "enum": [
            "ao"
          ],
          "title": "hostedBy",
          "type": "string"
        },
        "keywords": {
          "title": "keywords",
          "type": "string"
        },
        "layerMetaData": {
          "additionalProperties": false,
          "properties": {
            "comments": {
              "title": "comments",
              "type": "string"
            },
            "dataCategory": {
              "enum": [
                "Engineering",
                "Other",
                "Permitting",
                "Real Estate"
              ],
              "title": "dataCategory",
              "type": "string"
            },
            "dateOfStudy": {
              "title": "dateOfStudy",
              "type": "number"
            },
            "generationCapacity": {
              "title": "generationCapacity",
              "type": "number"
            }
          },
          "required": [
            "comments",
            "dateOfStudy",
            "generationCapacity"
          ],
          "title": "layerMetaData",
          "type": "object"
        },
        "layerSortPriority": {
          "title": "layerSortPriority",
          "type": "string"
        },
        "managedBy": {
          "enum": [
            "ao",
            "user"
          ],
          "title": "managedBy",
          "type": "string"
        },
        "pageId": {
          "title": "pageId",
          "type": "string"
        },
        "sectionGroupName": {
          "title": "sectionGroupName",
          "type": "string"
        },
        "sectionGroupPriority": {
          "title": "sectionGroupPriority",
          "type": "string"
        },
        "sectionName": {
          "title": "sectionName",
          "type": "string"
        },
        "sectionPriority": {
          "title": "sectionPriority",
          "type": "string"
        },
        "sourceName": {
          "title": "sourceName",
          "type": "string"
        },
        "sourceUrl": {
          "title": "sourceUrl",
          "type": "string"
        }
      },
      "required": [
        "archived",
        "managedBy"
      ],
      "title": "meta",
      "type": "object"
    },
    "name": {
      "title": "name",
      "type": "string"
    },
    "type": {
      "enum": [
        "layer-group"
      ],
      "title": "type",
      "type": "string"
    }
  },
  "required": [
    "accessKey",
    "layer",
    "meta",
    "name",
    "type"
  ],
  "type": "object"
}
    